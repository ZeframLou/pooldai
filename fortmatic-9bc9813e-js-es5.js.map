{"version":3,"sources":["node_modules/bnc-onboard/dist/esm/fortmatic-9bc9813e.js"],"names":[],"mappings":"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","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'regenerator-runtime/runtime';\nimport { n as networkName } from './onboard-37b13640.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nvar fortmaticIcon = \"\\n  <svg \\n    height=\\\"40\\\" \\n    viewBox=\\\"0 0 40 40\\\" \\n    width=\\\"40\\\" \\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n    <path d=\\\"m2744.99995 1155h9.99997 10.00008v9.98139h-10.00008-9.99997-9.99998v9.9814.64001 9.28323.05815 9.9234h-9.99997v-9.9234-.05815-9.28323-.64001-9.9814-9.98139h9.99997zm9.99961 29.88552h-9.94167v-9.92324h19.93595v10.27235c0 2.55359-1.01622 5.00299-2.82437 6.80909-1.80867 1.8061-4.26182 2.82181-6.82018 2.82335h-.34973z\\\" \\n      fill=\\\"#617bff\\\" \\n      fill-rule=\\\"evenodd\\\" \\n      transform=\\\"translate(-2725 -1155)\\\"/>\\n  </svg>\\n\";\n\nfunction fortmatic(options) {\n  var apiKey = options.apiKey,\n      networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Fortmatic',\n    svg: svg || fortmaticIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(helpers) {\n        var _yield$import, Fortmatic, instance, provider, BigNumber;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return import('fortmatic');\n\n              case 2:\n                _yield$import = _context.sent;\n                Fortmatic = _yield$import[\"default\"];\n                instance = new Fortmatic(apiKey, networkId === 1 ? undefined : networkName(networkId));\n                provider = instance.getProvider();\n                BigNumber = helpers.BigNumber;\n                return _context.abrupt(\"return\", {\n                  provider: provider,\n                  instance: instance,\n                  \"interface\": {\n                    name: 'Fortmatic',\n                    connect: instance.user.login,\n                    disconnect: instance.user.logout,\n                    address: {\n                      get: function get() {\n                        return Promise.resolve(provider.account);\n                      }\n                    },\n                    network: {\n                      get: function get() {\n                        return Promise.resolve(networkId);\n                      }\n                    },\n                    balance: {\n                      get: function get() {\n                        return provider.account && instance.user.getBalances().then(function (res) {\n                          return res[0] ? BigNumber(res[0].crypto_amount).times(BigNumber('1000000000000000000')).toString(10) : null;\n                        });\n                      }\n                    }\n                  }\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    mobile: true,\n    preferred: preferred\n  };\n}\n\nexport default fortmatic;"],"sourceRoot":"webpack:///"}