{"version":3,"sources":["node_modules/bnc-onboard/dist/esm/balance-36d7b782.js"],"names":[],"mappings":";;+NAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,oBAAA,GAAA,CAAA,wDAAA,CAAA,mBAAA,CAAA,kCAAA,+CAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,gEAAA,CAAA,aAAA,mBAAA,CAAA,CAAA,CAAA,wDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,iDAAA,CAAA,mBAAA,CAAA,4BAAA,yDAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,yCAAA,CAAA,mBAAA,CAAA,mBAAA,0CAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,iDAAA,CAAA,aAAA,mBAAA,CAAA,CAAA,CAAA,yCAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,oCAAA,CAAA,mBAAA,CAAA,cAAA,4CAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,mCAAA,CAAA,mBAAA,CAAA,aAAA,8BAAA,CAAA,CAAA,oBAAA,GAAA,CAAA,2CAAA,CAAA,aAAA,mBAAA,CAAA,CAAA,CAAA,mCAAA,CAAA,CAMA,QAAA,CAAA,OAAA,EAAA,CACA,GAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CACA,cAAA,CAAA,GADA,CAAA,CAGE,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAY,CACd,IAAA,CAAA,iBADc,CAEd,KAAA,CAAA,OAFc,CAGd,IAAA,CAAA,QAHc,CAAZ,EAKF,GAAA,CAAA,cAAA,CAAA,OAAA,CAAA,cAAA,CACA,OAAA,CAAA,OAAA,CAAA,OADA,CAEA,WAAA,CAAA,OAAA,CAAA,WAFA,CAGA,IAAA,CAAA,OAAA,CAAA,IAHA,CAIE,MAAA,CAAA,iDAAA,CAAA,GAAA,CAAA,CAAA,CAAY,CACd,IAAA,CAAA,gBADc,CAEd,KAAA,CAAA,cAFc,CAGd,IAAA,CAAA,QAHc,CAAZ,EAKF,MAAA,UAAA,eAAA,CAAA,CACA,GAAA,CAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CACA,SAAA,CAAA,eAAA,CAAA,SADA,CAC8C;AAE9C,GAAA,SAAA,CAAA,OAAA,CAAA,CAAA,EAAA,CAAA,SAAA,CAAA,cAAA,CAAA,CAAA,CAAA,CACA,MAAA,CACA,OAAA,CAAA,OAAA,EAAA,cADA,CAEA,WAAA,CAAA,WAAA,EAAA,uEAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,CAAA,GAAA,CAAA,SAAA,CAAA,qBAAA,CAAA,EAAA,QAAA,CAAA,EAAA,CAAA,CAAA,OAAA,CAFA,CAGA,SAAA,CAAA,SAHA,CAIA,IAAA,CAAA,IAAA,EAAsB,iDAAA,CAAA,GAAA,CAJtB,CAMA,CACA,CACA,CAEe,4BAAA,mBAAA,CAAA,SAAA,CAAA,CAAA,OAAA,C","sourcesContent":["import 'regenerator-runtime/runtime';\nimport { v as validateType, d as balanceIcon } from './onboard-37b13640.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\n\nfunction balance() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    minimumBalance: '0'\n  };\n  validateType({\n    name: 'balance options',\n    value: options,\n    type: 'object'\n  });\n  var minimumBalance = options.minimumBalance,\n      heading = options.heading,\n      description = options.description,\n      icon = options.icon;\n  validateType({\n    name: 'minimumBalance',\n    value: minimumBalance,\n    type: 'string'\n  });\n  return function (StateAndHelpers) {\n    var balance = StateAndHelpers.balance,\n        BigNumber = StateAndHelpers.BigNumber; // if balance is less than minimum\n\n    if (BigNumber(balance).lt(BigNumber(minimumBalance))) {\n      return {\n        heading: heading || 'Get Some ETH',\n        description: description || \"Your current account has less than the necessary minimum balance of \".concat(BigNumber(minimumBalance).div(BigNumber('1000000000000000000')).toString(10), \" ETH.\"),\n        eventCode: 'nsfFail',\n        icon: icon || balanceIcon\n      };\n    }\n  };\n}\n\nexport default balance;"],"sourceRoot":"webpack:///"}