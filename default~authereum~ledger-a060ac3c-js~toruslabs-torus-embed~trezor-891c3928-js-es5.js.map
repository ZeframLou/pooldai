{"version":3,"sources":["node_modules/eth-json-rpc-errors/index.js","node_modules/eth-json-rpc-errors/src/classes.js","node_modules/eth-json-rpc-errors/src/errors.js","node_modules/eth-json-rpc-errors/src/utils.js","node_modules/fast-safe-stringify/index.js","node_modules/json-stable-stringify/index.js","node_modules/jsonify/index.js","node_modules/jsonify/lib/parse.js","node_modules/jsonify/lib/stringify.js","node_modules/safe-event-emitter/index.js"],"names":[],"mappings":"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","sourcesContent":["\nconst { EthereumRpcError, EthereumProviderError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst ethErrors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  ethErrors,\n  EthereumRpcError,\n  EthereumProviderError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */\n","\nconst safeStringify = require('fast-safe-stringify')\n\n/**\n * @class JsonRpcError\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP 1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor (code, message, data) {\n\n    if (!Number.isInteger(code)) throw new Error(\n      '\"code\" must be an integer.'\n    )\n    if (!message || typeof message !== 'string') throw new Error(\n      '\"message\" must be a nonempty string.'\n    )\n\n    super(message)\n    this.code = code\n    if (data !== undefined) this.data = data\n  }\n\n  /**\n   * Returns a plain object with all public class properties.\n   * \n   * @returns {object} The serialized error. \n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message,\n    }\n    if (this.data !== undefined) serialized.data = this.data\n    if (this.stack) serialized.stack = this.stack\n    return serialized\n  }\n\n  /**\n   * Return a string representation of the serialized error, omitting\n   * any circular references.\n   * \n   * @returns {string} The serialized error as a string.\n   */\n  toString() {\n    return safeStringify(\n      this.serialize(),\n      stringifyReplacer,\n      2\n    )\n  }\n}\n\n/**\n * @class EthereumRpcError\n * Error subclass implementing Ethereum Provider errors per EIP 1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code, in the [ 1000 <= 4999 ] range.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor(code, message, data) {\n\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      )\n    }\n\n    super(code, message, data)\n  }\n}\n\n// Internal\n\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1000 && code <= 4999\n}\n\nfunction stringifyReplacer(_, value) {\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\n\n// Exports\n\nmodule.exports =  {\n  EthereumRpcError,\n  EthereumProviderError\n}\n","\nconst { EthereumRpcError, EthereumProviderError } = require('./classes')\nconst { getMessageFromCode } = require('./utils')\nconst ERROR_CODES = require('./errorCodes.json')\n\nmodule.exports = {\n  rpc: {\n    /**\n     * Get a JSON RPC 2.0 Parse (-32700) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    parse: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.parse, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidRequest: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidRequest, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidParams: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidParams, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotFound, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Internal (-32603) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    internal: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.internal, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Server error.\n     * Permits integer error codes in the [ -32099 <= -32005 ] range.\n     * Codes -32000 through -32004 are reserved by EIP 1474.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    server: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum RPC Server errors must provide single object argument.')\n      }\n      const { code } = opts\n      if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n        throw new Error(\n          '\"code\" must be an integer such that: -32099 <= code <= -32005'\n        )\n      }\n      return getEthJsonRpcError(code, opts)\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidInput: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidInput, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceNotFound, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceUnavailable: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceUnavailable, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    transactionRejected: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.transactionRejected, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotSupported: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotSupported, opts\n    ),\n  },\n\n  provider: {\n    /**\n     * Get an Ethereum Provider User Rejected Request (4001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    userRejectedRequest: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.userRejectedRequest, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unauthorized (4100) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unauthorized: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unauthorized, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unsupported Method (4200) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unsupportedMethod: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unsupportedMethod, opts\n      )\n    },\n\n    /**\n     * Get a custom Ethereum Provider error.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} opts.message - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    custom: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum Provider custom errors must provide single object argument.')\n      }\n      const { code, message, data } = opts\n      if (!message || typeof message !== 'string') throw new Error(\n        '\"message\" must be a nonempty string'\n      )\n      return new EthereumProviderError(code, message, data)\n    },\n  },\n}\n\n// Internal\n\nfunction getEthJsonRpcError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction getEthProviderError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumProviderError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction validateOpts (opts) {\n  let message, data\n  if (opts) {\n    if (typeof opts === 'string') {\n      message = opts\n    } else if (typeof opts === 'object' && !Array.isArray(opts)) {\n      message = opts.message\n      data = opts.data\n    }\n  }\n  return [ message, data ]\n}\n","\nconst errorValues = require('./errorValues.json')\nconst FALLBACK_ERROR_CODE = require('./errorCodes.json').rpc.internal\nconst { EthereumRpcError } = require('./classes')\n\nconst JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.'\n\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.'\n\nconst FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n}\n\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n * \n * @param {number} code - The integer error code\n * @param {string} fallbackMessage - The fallback message\n * @return {string} The corresponding message or the fallback message\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n\n  if (Number.isInteger(code)) {\n\n    const codeString = code.toString()\n    if (errorValues[codeString]) return errorValues[codeString].message\n\n    if (isJsonRpcServerError(code)) return JSON_RPC_SERVER_ERROR_MESSAGE\n\n    // TODO: allow valid codes and messages to be extended\n    // // EIP 1193 Status Codes\n    // if (code >= 4000 && code <= 4999) return Something?\n  }\n  return fallbackMessage\n}\n\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n * \n * @param {number} code - The code to check\n * @return {boolean} true if the code is valid, false otherwise.\n */\nfunction isValidCode(code) {\n\n  if (!Number.isInteger(code)) return false\n\n  const codeString = code.toString()\n  if (errorValues[codeString]) return true\n\n  if (isJsonRpcServerError(code)) return true\n\n  // TODO: allow valid codes and messages to be extended\n  // // EIP 1193 Status Codes\n  // if (code >= 4000 && code <= 4999) return true\n\n  return false\n}\n\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n * Adds a 'stack' property if it exists on the given error.\n *\n * @param {any} error - The error to serialize.\n * @param {object} fallbackError - The custom fallback error values if the\n * given error is invalid.\n * @return {object} A standardized error object.\n */\nfunction serializeError (error, fallbackError = FALLBACK_ERROR) {\n\n  if (\n    !fallbackError || \n    !Number.isInteger(fallbackError.code) ||\n    typeof fallbackError.message !== 'string'\n  ) {\n    throw new Error(\n      'fallbackError must contain integer number code and string message.'\n    )\n  }\n\n  if (error instanceof EthereumRpcError) {\n    return error.serialize()\n  }\n\n  const serialized = {}\n\n  if (error && isValidCode(error.code)) {\n\n    serialized.code = error.code\n\n    if (error.message && typeof error.message === 'string') {\n      serialized.message = error.message\n      if (error.hasOwnProperty('data')) serialized.data = error.data\n    } else {\n      serialized.message = getMessageFromCode(serialized.code)\n      serialized.data = { originalError: assignOriginalError(error) }\n    }\n\n  } else {\n    serialized.code = fallbackError.code\n    serialized.message = (\n      error && error.message\n        ? error.message\n        : fallbackError.message\n    )\n    serialized.data = { originalError: assignOriginalError(error) }\n  }\n\n  if (error && error.stack) serialized.stack = error.stack\n  return serialized\n}\n\n// Internal\n\nfunction isJsonRpcServerError (code) {\n  return code >= -32099 && code <= -32000\n}\n\nfunction assignOriginalError (error) {\n  if (error && typeof error === 'object' && !Array.isArray(error)) {\n    return Object.assign({}, error)\n  }\n  return error\n}\n\n// Exports\n\nmodule.exports = {\n  getMessageFromCode,\n  isValidCode,\n  serializeError,\n  JSON_RPC_SERVER_ERROR_MESSAGE,\n}\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar arr = []\nvar replacerStack = []\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer) {\n  decirc(obj, '', [], undefined)\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(obj, replacer, spacer)\n  } else {\n    res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\nfunction decirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, stack, val)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer) {\n  var tmp = deterministicDecirc(obj, '', [], undefined) || obj\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(tmp, replacer, spacer)\n  } else {\n    res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    if (typeof val.toJSON === 'function') {\n      return\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, stack, val)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, stack, val)\n        tmp[key] = val[key]\n      }\n      if (parent !== undefined) {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as [Circular]\nfunction replaceGetterValues (replacer) {\n  replacer = replacer !== undefined ? replacer : function (k, v) { return v }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = '[Circular]'\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n","const util = require('util')\nconst EventEmitter = require('events/')\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n}\n\nmodule.exports = SafeEventEmitter\n\n\nfunction SafeEventEmitter() {\n  EventEmitter.call(this)\n}\n\nutil.inherits(SafeEventEmitter, EventEmitter)\n\nSafeEventEmitter.prototype.emit = function (type) {\n  // copied from https://github.com/Gozala/events/blob/master/events.js\n  // modified lines are commented with \"edited:\"\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    // edited: using safeApply\n    safeApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      // edited: using safeApply\n      safeApply(listeners[i], this, args);\n  }\n\n  return true;\n}\n\nfunction safeApply(handler, context, args) {\n  try {\n    ReflectApply(handler, context, args)\n  } catch (err) {\n    // throw error after timeout so as not to interupt the stack\n    setTimeout(() => {\n      throw err\n    })\n  }\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n"],"sourceRoot":"webpack:///"}