{"version":3,"sources":["node_modules/bnc-onboard/dist/esm/hd-wallet-51f07955.js","node_modules/coinstring/lib/coinstring.js","node_modules/coinstring/node_modules/bs58/lib/bs58.js","node_modules/ethereumjs-common/dist/chains/index.js","node_modules/ethereumjs-common/dist/hardforks/index.js","node_modules/ethereumjs-common/dist/index.js","node_modules/ethereumjs-tx/dist/fake.js","node_modules/ethereumjs-tx/dist/index.js","node_modules/ethereumjs-tx/dist/transaction.js","node_modules/hdkey/lib/hdkey.js"],"names":[],"mappings":"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","sourcesContent":["import Web3ProviderEngine from 'web3-provider-engine';\nimport RpcSource from 'web3-provider-engine/subproviders/rpc';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SubscriptionSubprovider from 'web3-provider-engine/subproviders/subscriptions';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\nimport HDKey from 'hdkey';\nimport { publicToAddress, toChecksumAddress } from 'ethereumjs-util';\nimport buffer from 'buffer';\n\nfunction createProvider(config) {\n  var getAccounts = config.getAccounts,\n      signTransaction = config.signTransaction,\n      rpcUrl = config.rpcUrl;\n  var idMgmt = new HookedWalletSubprovider({\n    getAccounts: getAccounts,\n    signTransaction: signTransaction\n  });\n  var rpcSubProvider = new RpcSource({\n    rpcUrl: rpcUrl.includes('http') ? rpcUrl : \"https://\".concat(rpcUrl)\n  });\n  var provider = new Web3ProviderEngine();\n  provider.addProvider(new SubscriptionSubprovider());\n  provider.addProvider(new FilterSubprovider());\n  provider.addProvider(idMgmt);\n  provider.addProvider(rpcSubProvider);\n  provider.start();\n  return provider;\n}\n\nvar numberToGet = 5;\n\nfunction generateAddresses(account, offset) {\n  var publicKey = account.publicKey,\n      chainCode = account.chainCode,\n      path = account.path;\n  var hdk = new HDKey();\n  hdk.publicKey = new buffer.Buffer(publicKey, 'hex');\n  hdk.chainCode = new buffer.Buffer(chainCode, 'hex');\n  var addresses = [];\n\n  for (var i = offset; i < numberToGet + offset; i++) {\n    var dkey = hdk.deriveChild(i);\n    var address = publicToAddress(dkey.publicKey, true).toString('hex');\n    addresses.push({\n      dPath: \"\".concat(path, \"/\").concat(i),\n      address: toChecksumAddress(address)\n    });\n  }\n\n  return addresses;\n}\n\nfunction isValidPath(path) {\n  var parts = path.split('/');\n\n  if (parts[0] !== 'm') {\n    return false;\n  }\n\n  if (parts[1] !== \"44'\") {\n    return false;\n  }\n\n  if (parts[2] !== \"60'\" && parts[2] !== \"1'\") {\n    return false;\n  }\n\n  if (parts[3] === undefined) {\n    return true;\n  }\n\n  var accountFieldDigit = Number(parts[3][0]);\n\n  if (isNaN(accountFieldDigit) || accountFieldDigit < 0 || parts[3][1] !== \"'\") {\n    return false;\n  }\n\n  if (parts[4] === undefined) {\n    return true;\n  }\n\n  var changeFieldDigit = Number(parts[4][0]);\n\n  if (isNaN(changeFieldDigit) || changeFieldDigit < 0) {\n    return false;\n  }\n\n  if (parts[5] === undefined) {\n    return true;\n  }\n\n  var addressFieldDigit = Number(parts[5][0]);\n\n  if (isNaN(addressFieldDigit) || addressFieldDigit < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport { createProvider as c, generateAddresses as g, isValidPath as i };","var base58 = require('bs58')\nvar createHash = require('create-hash')\n\nfunction encode (payload, version) {\n  if (Array.isArray(payload) || payload instanceof Uint8Array) {\n    payload = new Buffer(payload)\n  }\n\n  var buf\n  if (version != null) {\n    if (typeof version === 'number') {\n      version = new Buffer([version])\n    }\n    buf = Buffer.concat([version, payload])\n  } else {\n    buf = payload\n  }\n\n  var checksum = sha256x2(buf).slice(0, 4)\n  var result = Buffer.concat([buf, checksum])\n  return base58.encode(result)\n}\n\nfunction decode (base58str, version) {\n  var arr = base58.decode(base58str)\n  var buf = new Buffer(arr)\n  var versionLength\n\n  if (version == null) {\n    versionLength = 0\n  } else {\n    if (typeof version === 'number') version = new Buffer([version])\n\n    versionLength = version.length\n    var versionCompare = buf.slice(0, versionLength)\n    if (versionCompare.toString('hex') !== version.toString('hex')) {\n      throw new Error('Invalid version')\n    }\n  }\n\n  var checksum = buf.slice(-4)\n  var endPos = buf.length - 4\n  var bytes = buf.slice(0, endPos)\n\n  var newChecksum = sha256x2(bytes).slice(0, 4)\n  if (checksum.toString('hex') !== newChecksum.toString('hex')) {\n    throw new Error('Invalid checksum')\n  }\n\n  return bytes.slice(versionLength)\n}\n\nfunction isValid (base58str, version) {\n  try {\n    decode(base58str, version)\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n\nfunction createEncoder (version) {\n  return function (payload) {\n    return encode(payload, version)\n  }\n}\n\nfunction createDecoder (version) {\n  return function (base58str) {\n    return decode(base58str, version)\n  }\n}\n\nfunction createValidator (version) {\n  return function (base58str) {\n    return isValid(base58str, version)\n  }\n}\n\nfunction sha256x2 (buffer) {\n  var sha = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(sha).digest()\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n  isValid: isValid,\n  createEncoder: createEncoder,\n  createDecoder: createDecoder,\n  createValidator: createValidator\n}\n","// Base58 encoding/decoding\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\nvar ALPHABET_MAP = {}\nfor(var i = 0; i < ALPHABET.length; i++) {\n  ALPHABET_MAP[ALPHABET.charAt(i)] = i\n}\nvar BASE = 58\n\nfunction encode(buffer) {\n  if (buffer.length === 0) return ''\n\n  var i, j, digits = [0]\n  for (i = 0; i < buffer.length; i++) {\n    for (j = 0; j < digits.length; j++) digits[j] <<= 8\n\n    digits[0] += buffer[i]\n\n    var carry = 0\n    for (j = 0; j < digits.length; ++j) {\n      digits[j] += carry\n\n      carry = (digits[j] / BASE) | 0\n      digits[j] %= BASE\n    }\n\n    while (carry) {\n      digits.push(carry % BASE)\n\n      carry = (carry / BASE) | 0\n    }\n  }\n\n  // deal with leading zeros\n  for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) digits.push(0)\n\n  // convert digits to a string\n  var stringOutput = \"\"\n  for (var i = digits.length - 1; i >= 0; i--) {\n    stringOutput = stringOutput + ALPHABET[digits[i]]\n  }\n  return stringOutput\n}\n\nfunction decode(string) {\n  if (string.length === 0) return []\n\n  var i, j, bytes = [0]\n  for (i = 0; i < string.length; i++) {\n    var c = string[i]\n    if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character')\n\n    for (j = 0; j < bytes.length; j++) bytes[j] *= BASE\n    bytes[0] += ALPHABET_MAP[c]\n\n    var carry = 0\n    for (j = 0; j < bytes.length; ++j) {\n      bytes[j] += carry\n\n      carry = bytes[j] >> 8\n      bytes[j] &= 0xff\n    }\n\n    while (carry) {\n      bytes.push(carry & 0xff)\n\n      carry >>= 8\n    }\n  }\n\n  // deal with leading zeros\n  for (i = 0; string[i] === '1' && i < string.length - 1; i++) bytes.push(0)\n\n  return bytes.reverse()\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = {\n    names: {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '6284': 'goerli',\n    },\n    mainnet: require('./mainnet.json'),\n    ropsten: require('./ropsten.json'),\n    rinkeby: require('./rinkeby.json'),\n    kovan: require('./kovan.json'),\n    goerli: require('./goerli.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n];\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\n/**\n * Common class to access chain and hardfork parameters\n */\nvar Common = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param chain String ('mainnet') or Number (1) chain\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    function Common(chain, hardfork, supportedHardforks) {\n        this._chainParams = this.setChain(chain);\n        this._hardfork = null;\n        this._supportedHardforks = supportedHardforks === undefined ? [] : supportedHardforks;\n        if (hardfork) {\n            this.setHardfork(hardfork);\n        }\n    }\n    /**\n     * Creates a Common object for a custom chain, based on a standard one. It uses all the [[Chain]]\n     * params from [[baseChain]] except the ones overridden in [[customChainParams]].\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common(__assign({}, standardChainParams, customChainParams), hardfork, supportedHardforks);\n    };\n    Common._getChainParams = function (chain) {\n        if (typeof chain === 'number') {\n            if (chains_1.chains['names'][chain]) {\n                return chains_1.chains[chains_1.chains['names'][chain]];\n            }\n            throw new Error(\"Chain with ID \" + chain + \" not supported\");\n        }\n        if (chains_1.chains[chain]) {\n            return chains_1.chains[chain];\n        }\n        throw new Error(\"Chain with name \" + chain + \" not supported\");\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        if (typeof chain === 'number' || typeof chain === 'string') {\n            this._chainParams = Common._getChainParams(chain);\n        }\n        else if (typeof chain === 'object') {\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            for (var _i = 0, required_1 = required; _i < required_1.length; _i++) {\n                var param = required_1[_i];\n                if (chain[param] === undefined) {\n                    throw new Error(\"Missing required chain parameter: \" + param);\n                }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier ('byzantium')\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n        }\n        var changed = false;\n        for (var _i = 0, hardforkChanges_1 = hardforks_1.hardforks; _i < hardforkChanges_1.length; _i++) {\n            var hfChanges = hardforkChanges_1[_i];\n            if (hfChanges[0] === hardfork) {\n                this._hardfork = hardfork;\n                changed = true;\n            }\n        }\n        if (!changed) {\n            throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n        }\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        onlySupported = onlySupported === undefined ? true : onlySupported;\n        if (!hardfork) {\n            if (!this._hardfork) {\n                throw new Error('Method called with neither a hardfork set nor provided by param');\n            }\n            else {\n                hardfork = this._hardfork;\n            }\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var hfs = this.hardforks();\n        for (var _i = 0, hfs_1 = hfs; _i < hfs_1.length; _i++) {\n            var hf = hfs_1[_i];\n            if (hf['name'] === hardfork)\n                return hf;\n        }\n        throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        if (this._supportedHardforks.length > 0) {\n            for (var _i = 0, _a = this._supportedHardforks; _i < _a.length; _i++) {\n                var supportedHf = _a[_i];\n                if (hardfork === supportedHf)\n                    return true;\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow', 'casper', 'sharding')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name, optional if hardfork set\n     */\n    Common.prototype.param = function (topic, name, hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        var value;\n        for (var _i = 0, hardforkChanges_2 = hardforks_1.hardforks; _i < hardforkChanges_2.length; _i++) {\n            var hfChanges = hardforkChanges_2[_i];\n            if (!hfChanges[1][topic]) {\n                throw new Error(\"Topic \" + topic + \" not defined\");\n            }\n            if (hfChanges[1][topic][name] !== undefined) {\n                value = hfChanges[1][topic][name].v;\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        if (value === undefined) {\n            throw new Error(topic + \" value for \" + name + \" not found\");\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.param(topic, name, hardfork);\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlock(hardfork);\n        if (hfBlock !== null && blockNumber >= hfBlock)\n            return true;\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        for (var _i = 0, hardforks_2 = hardforks; _i < hardforks_2.length; _i++) {\n            var hf = hardforks_2[_i];\n            if (hf['name'] === hardfork1)\n                posHf1 = index;\n            if (hf['name'] === hardfork2)\n                posHf2 = index;\n            index += 1;\n        }\n        return posHf1 >= posHf2;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        for (var _i = 0, _a = this.hardforks(); _i < _a.length; _i++) {\n            var hf = _a[_i];\n            if (hf['name'] === hardfork && hf['block'] !== null)\n                return true;\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        for (var _i = 0, hfs_2 = hfs; _i < hfs_2.length; _i++) {\n            var hf = hfs_2[_i];\n            if (hf['block'] === null)\n                continue;\n            if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                break;\n            if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                continue;\n            activeHardforks.push(hf);\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        return this._getHardfork(hardfork)['block'];\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block of the current chain\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        if (this.hardforkBlock(hardfork) === blockNumber) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Provide the consensus type for the hardfork set or provided as param\n     * @param hardfork Hardfork name, optional if hardfork set\n     * @returns Consensus type (e.g. 'pow', 'poa')\n     */\n    Common.prototype.consensus = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        return this._getHardfork(hardfork)['consensus'];\n    };\n    /**\n     * Provide the finality type for the hardfork set or provided as param\n     * @param {String} hardfork Hardfork name, optional if hardfork set\n     * @returns {String} Finality type (e.g. 'pos', null of no finality)\n     */\n    Common.prototype.finality = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        return this._getHardfork(hardfork)['finality'];\n    };\n    /**\n     * Returns the Genesis parameters of current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainId = function () {\n        return this._chainParams['chainId'];\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkId = function () {\n        return this._chainParams['networkId'];\n    };\n    return Common;\n}());\nexports.default = Common;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar buffer_1 = require(\"buffer\");\nvar transaction_1 = require(\"./transaction\");\n/**\n * Creates a new transaction object that doesn't need to be signed.\n *\n * @param data - A transaction can be initialized with its rlp representation, an array containing\n * the value of its fields in order, or an object containing them by name.\n *\n * @param opts - The transaction's options, used to indicate the chain and hardfork the\n * transactions belongs to.\n *\n * @see Transaction\n */\nvar FakeTransaction = /** @class */ (function (_super) {\n    __extends(FakeTransaction, _super);\n    function FakeTransaction(data, opts) {\n        if (data === void 0) { data = {}; }\n        if (opts === void 0) { opts = {}; }\n        var _this = _super.call(this, data, opts) || this;\n        Object.defineProperty(_this, 'from', {\n            enumerable: true,\n            configurable: true,\n            get: function () { return _this.getSenderAddress(); },\n            set: function (val) {\n                if (val) {\n                    _this._from = ethereumjs_util_1.toBuffer(val);\n                }\n            },\n        });\n        var txData = data;\n        if (txData.from) {\n            _this.from = ethereumjs_util_1.toBuffer(txData.from);\n        }\n        return _this;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx, using the sender address to generate a fake\n     * signature.\n     *\n     * @param includeSignature - Whether or not to include the signature\n     */\n    FakeTransaction.prototype.hash = function (includeSignature) {\n        if (includeSignature === void 0) { includeSignature = true; }\n        if (includeSignature && this._from && this._from.toString('hex') !== '') {\n            // include a fake signature using the from address as a private key\n            var fakeKey = buffer_1.Buffer.concat([this._from, this._from.slice(0, 12)]);\n            this.sign(fakeKey);\n        }\n        return _super.prototype.hash.call(this, includeSignature);\n    };\n    return FakeTransaction;\n}(transaction_1.default));\nexports.default = FakeTransaction;\n//# sourceMappingURL=fake.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar transaction_1 = require(\"./transaction\");\nexports.Transaction = transaction_1.default;\nvar fake_1 = require(\"./fake\");\nexports.FakeTransaction = fake_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar ethereumjs_common_1 = require(\"ethereumjs-common\");\nvar buffer_1 = require(\"buffer\");\n// secp256k1n/2\nvar N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n/**\n * An Ethereum transaction.\n */\nvar Transaction = /** @class */ (function () {\n    /**\n     * Creates a new transaction from an object with its fields' values.\n     *\n     * @param data - A transaction can be initialized with its rlp representation, an array containing\n     * the value of its fields in order, or an object containing them by name.\n     *\n     * @param opts - The transaction's options, used to indicate the chain and hardfork the\n     * transactions belongs to.\n     *\n     * @note Transaction objects implement EIP155 by default. To disable it, use the constructor's\n     * second parameter to set a chain and hardfork before EIP155 activation (i.e. before Spurious\n     * Dragon.)\n     *\n     * @example\n     * ```js\n     * const txData = {\n     *   nonce: '0x00',\n     *   gasPrice: '0x09184e72a000',\n     *   gasLimit: '0x2710',\n     *   to: '0x0000000000000000000000000000000000000000',\n     *   value: '0x00',\n     *   data: '0x7f7465737432000000000000000000000000000000000000000000000000000000600057',\n     *   v: '0x1c',\n     *   r: '0x5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',\n     *   s: '0x5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'\n     * };\n     * const tx = new Transaction(txData);\n     * ```\n     */\n    function Transaction(data, opts) {\n        if (data === void 0) { data = {}; }\n        if (opts === void 0) { opts = {}; }\n        // instantiate Common class instance based on passed options\n        if (opts.common) {\n            if (opts.chain || opts.hardfork) {\n                throw new Error('Instantiation with both opts.common, and opts.chain and opts.hardfork parameter not allowed!');\n            }\n            this._common = opts.common;\n        }\n        else {\n            var chain = opts.chain ? opts.chain : 'mainnet';\n            var hardfork = opts.hardfork ? opts.hardfork : 'petersburg';\n            this._common = new ethereumjs_common_1.default(chain, hardfork);\n        }\n        // Define Properties\n        var fields = [\n            {\n                name: 'nonce',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'gasPrice',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'gasLimit',\n                alias: 'gas',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'to',\n                allowZero: true,\n                length: 20,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'value',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'data',\n                alias: 'input',\n                allowZero: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'v',\n                allowZero: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'r',\n                length: 32,\n                allowZero: true,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 's',\n                length: 32,\n                allowZero: true,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n        ];\n        // attached serialize\n        ethereumjs_util_1.defineProperties(this, fields, data);\n        /**\n         * @property {Buffer} from (read only) sender address of this transaction, mathematically derived from other parameters.\n         * @name from\n         * @memberof Transaction\n         */\n        Object.defineProperty(this, 'from', {\n            enumerable: true,\n            configurable: true,\n            get: this.getSenderAddress.bind(this),\n        });\n        this._validateV(this.v);\n        this._overrideVSetterWithValidation();\n    }\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    Transaction.prototype.toCreationAddress = function () {\n        return this.to.toString('hex') === '';\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx\n     * @param includeSignature - Whether or not to include the signature\n     */\n    Transaction.prototype.hash = function (includeSignature) {\n        if (includeSignature === void 0) { includeSignature = true; }\n        var items;\n        if (includeSignature) {\n            items = this.raw;\n        }\n        else {\n            if (this._implementsEIP155()) {\n                items = this.raw.slice(0, 6).concat([\n                    ethereumjs_util_1.toBuffer(this.getChainId()),\n                    // TODO: stripping zeros should probably be a responsibility of the rlp module\n                    ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0)),\n                    ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0)),\n                ]);\n            }\n            else {\n                items = this.raw.slice(0, 6);\n            }\n        }\n        // create hash\n        return ethereumjs_util_1.rlphash(items);\n    };\n    /**\n     * returns chain ID\n     */\n    Transaction.prototype.getChainId = function () {\n        return this._common.chainId();\n    };\n    /**\n     * returns the sender's address\n     */\n    Transaction.prototype.getSenderAddress = function () {\n        if (this._from) {\n            return this._from;\n        }\n        var pubkey = this.getSenderPublicKey();\n        this._from = ethereumjs_util_1.publicToAddress(pubkey);\n        return this._from;\n    };\n    /**\n     * returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        if (!this.verifySignature()) {\n            throw new Error('Invalid Signature');\n        }\n        // If the signature was verified successfully the _senderPubKey field is defined\n        return this._senderPubKey;\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    Transaction.prototype.verifySignature = function () {\n        var msgHash = this.hash(false);\n        // All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        if (this._common.gteHardfork('homestead') && new ethereumjs_util_1.BN(this.s).cmp(N_DIV_2) === 1) {\n            return false;\n        }\n        try {\n            var v = ethereumjs_util_1.bufferToInt(this.v);\n            var useChainIdWhileRecoveringPubKey = v >= this.getChainId() * 2 + 35 && this._common.gteHardfork('spuriousDragon');\n            this._senderPubKey = ethereumjs_util_1.ecrecover(msgHash, v, this.r, this.s, useChainIdWhileRecoveringPubKey ? this.getChainId() : undefined);\n        }\n        catch (e) {\n            return false;\n        }\n        return !!this._senderPubKey;\n    };\n    /**\n     * sign a transaction with a given private key\n     * @param privateKey - Must be 32 bytes in length\n     */\n    Transaction.prototype.sign = function (privateKey) {\n        // We clear any previous signature before signing it. Otherwise, _implementsEIP155's can give\n        // different results if this tx was already signed.\n        this.v = new buffer_1.Buffer([]);\n        this.s = new buffer_1.Buffer([]);\n        this.r = new buffer_1.Buffer([]);\n        var msgHash = this.hash(false);\n        var sig = ethereumjs_util_1.ecsign(msgHash, privateKey);\n        if (this._implementsEIP155()) {\n            sig.v += this.getChainId() * 2 + 8;\n        }\n        Object.assign(this, sig);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        var data = this.raw[5];\n        var cost = new ethereumjs_util_1.BN(0);\n        for (var i = 0; i < data.length; i++) {\n            data[i] === 0\n                ? cost.iaddn(this._common.param('gasPrices', 'txDataZero'))\n                : cost.iaddn(this._common.param('gasPrices', 'txDataNonZero'));\n        }\n        return cost;\n    };\n    /**\n     * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    Transaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().iaddn(this._common.param('gasPrices', 'tx'));\n        if (this._common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this._common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * the up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return new ethereumjs_util_1.BN(this.gasLimit).imul(new ethereumjs_util_1.BN(this.gasPrice)).iadd(new ethereumjs_util_1.BN(this.value));\n    };\n    Transaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (!this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        if (this.getBaseFee().cmp(new ethereumjs_util_1.BN(this.gasLimit)) > 0) {\n            errors.push([\"gas limit is too low. Need at least \" + this.getBaseFee()]);\n        }\n        if (stringError === false) {\n            return errors.length === 0;\n        }\n        else {\n            return errors.join(' ');\n        }\n    };\n    /**\n     * Returns the rlp encoding of the transaction\n     */\n    Transaction.prototype.serialize = function () {\n        // Note: This never gets executed, defineProperties overwrites it.\n        return ethereumjs_util_1.rlp.encode(this.raw);\n    };\n    /**\n     * Returns the transaction in JSON format\n     * @see {@link https://github.com/ethereumjs/ethereumjs-util/blob/master/docs/index.md#defineproperties|ethereumjs-util}\n     */\n    Transaction.prototype.toJSON = function (labels) {\n        if (labels === void 0) { labels = false; }\n        // Note: This never gets executed, defineProperties overwrites it.\n        return {};\n    };\n    Transaction.prototype._validateV = function (v) {\n        if (v === undefined || v.length === 0) {\n            return;\n        }\n        if (!this._common.gteHardfork('spuriousDragon')) {\n            return;\n        }\n        var vInt = ethereumjs_util_1.bufferToInt(v);\n        if (vInt === 27 || vInt === 28) {\n            return;\n        }\n        var isValidEIP155V = vInt === this.getChainId() * 2 + 35 || vInt === this.getChainId() * 2 + 36;\n        if (!isValidEIP155V) {\n            throw new Error(\"Incompatible EIP155-based V \" + vInt + \" and chain id \" + this.getChainId() + \". See the second parameter of the Transaction constructor to set the chain id.\");\n        }\n    };\n    Transaction.prototype._isSigned = function () {\n        return this.v.length > 0 && this.r.length > 0 && this.s.length > 0;\n    };\n    Transaction.prototype._overrideVSetterWithValidation = function () {\n        var _this = this;\n        var vDescriptor = Object.getOwnPropertyDescriptor(this, 'v');\n        Object.defineProperty(this, 'v', __assign({}, vDescriptor, { set: function (v) {\n                if (v !== undefined) {\n                    _this._validateV(ethereumjs_util_1.toBuffer(v));\n                }\n                vDescriptor.set(v);\n            } }));\n    };\n    Transaction.prototype._implementsEIP155 = function () {\n        var onEIP155BlockOrLater = this._common.gteHardfork('spuriousDragon');\n        if (!this._isSigned()) {\n            // We sign with EIP155 all unsigned transactions after spuriousDragon\n            return onEIP155BlockOrLater;\n        }\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing\n        // the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six\n        // elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by\n        // CHAIN_ID, r = 0 and s = 0.\n        var v = ethereumjs_util_1.bufferToInt(this.v);\n        var vAndChainIdMeetEIP155Conditions = v === this.getChainId() * 2 + 35 || v === this.getChainId() * 2 + 36;\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    return Transaction;\n}());\nexports.default = Transaction;\n//# sourceMappingURL=transaction.js.map","var assert = require('assert')\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = require('crypto')\nvar cs = require('coinstring')\nvar secp256k1 = require('secp256k1')\n\nvar MASTER_SECRET = Buffer.from('Bitcoin seed', 'utf8')\nvar HARDENED_OFFSET = 0x80000000\nvar LEN = 78\n\n// Bitcoin hardcoded by default, can use package `coininfo` for others\nvar BITCOIN_VERSIONS = {private: 0x0488ADE4, public: 0x0488B21E}\n\nfunction HDKey (versions) {\n  this.versions = versions || BITCOIN_VERSIONS\n  this.depth = 0\n  this.index = 0\n  this._privateKey = null\n  this._publicKey = null\n  this.chainCode = null\n  this._fingerprint = 0\n  this.parentFingerprint = 0\n}\n\nObject.defineProperty(HDKey.prototype, 'fingerprint', { get: function () { return this._fingerprint } })\nObject.defineProperty(HDKey.prototype, 'identifier', { get: function () { return this._identifier } })\nObject.defineProperty(HDKey.prototype, 'pubKeyHash', { get: function () { return this.identifier } })\n\nObject.defineProperty(HDKey.prototype, 'privateKey', {\n  get: function () {\n    return this._privateKey\n  },\n  set: function (value) {\n    assert.equal(value.length, 32, 'Private key must be 32 bytes.')\n    assert(secp256k1.privateKeyVerify(value) === true, 'Invalid private key')\n\n    this._privateKey = value\n    this._publicKey = secp256k1.publicKeyCreate(value, true)\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicKey', {\n  get: function () {\n    return this._publicKey\n  },\n  set: function (value) {\n    assert(value.length === 33 || value.length === 65, 'Public key must be 33 or 65 bytes.')\n    assert(secp256k1.publicKeyVerify(value) === true, 'Invalid public key')\n\n    this._publicKey = secp256k1.publicKeyConvert(value, true) // force compressed point\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n    this._privateKey = null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'privateExtendedKey', {\n  get: function () {\n    if (this._privateKey) return cs.encode(serialize(this, this.versions.private, Buffer.concat([Buffer.alloc(1, 0), this.privateKey])))\n    else return null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicExtendedKey', {\n  get: function () {\n    return cs.encode(serialize(this, this.versions.public, this.publicKey))\n  }\n})\n\nHDKey.prototype.derive = function (path) {\n  if (path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return this\n  }\n\n  var entries = path.split('/')\n  var hdkey = this\n  entries.forEach(function (c, i) {\n    if (i === 0) {\n      assert(/^[mM]{1}/.test(c), 'Path must start with \"m\" or \"M\"')\n      return\n    }\n\n    var hardened = (c.length > 1) && (c[c.length - 1] === \"'\")\n    var childIndex = parseInt(c, 10) // & (HARDENED_OFFSET - 1)\n    assert(childIndex < HARDENED_OFFSET, 'Invalid index')\n    if (hardened) childIndex += HARDENED_OFFSET\n\n    hdkey = hdkey.deriveChild(childIndex)\n  })\n\n  return hdkey\n}\n\nHDKey.prototype.deriveChild = function (index) {\n  var isHardened = index >= HARDENED_OFFSET\n  var indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  var data\n\n  if (isHardened) { // Hardened child\n    assert(this.privateKey, 'Could not derive hardened child key')\n\n    var pk = this.privateKey\n    var zb = Buffer.alloc(1, 0)\n    pk = Buffer.concat([zb, pk])\n\n    // data = 0x00 || ser256(kpar) || ser32(index)\n    data = Buffer.concat([pk, indexBuffer])\n  } else { // Normal child\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    data = Buffer.concat([this.publicKey, indexBuffer])\n  }\n\n  var I = crypto.createHmac('sha512', this.chainCode).update(data).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hd = new HDKey(this.versions)\n\n  // Private parent key -> private child key\n  if (this.privateKey) {\n    // ki = parse256(IL) + kpar (mod n)\n    try {\n      hd.privateKey = secp256k1.privateKeyTweakAdd(this.privateKey, IL)\n      // throw if IL >= n || (privateKey + IL) === 0\n    } catch (err) {\n      // In case parse256(IL) >= n or ki == 0, one should proceed with the next value for i\n      return this.derive(index + 1)\n    }\n  // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    try {\n      hd.publicKey = secp256k1.publicKeyTweakAdd(this.publicKey, IL, true)\n      // throw if IL >= n || (g**IL + publicKey) is infinity\n    } catch (err) {\n      // In case parse256(IL) >= n or Ki is the point at infinity, one should proceed with the next value for i\n      return this.derive(index + 1, isHardened)\n    }\n  }\n\n  hd.chainCode = IR\n  hd.depth = this.depth + 1\n  hd.parentFingerprint = this.fingerprint// .readUInt32BE(0)\n  hd.index = index\n\n  return hd\n}\n\nHDKey.prototype.sign = function (hash) {\n  return secp256k1.sign(hash, this.privateKey).signature\n}\n\nHDKey.prototype.verify = function (hash, signature) {\n  return secp256k1.verify(hash, signature, this.publicKey)\n}\n\nHDKey.prototype.wipePrivateData = function () {\n  if (this._privateKey) crypto.randomBytes(this._privateKey.length).copy(this._privateKey)\n  this._privateKey = null\n  return this\n}\n\nHDKey.prototype.toJSON = function () {\n  return {\n    xpriv: this.privateExtendedKey,\n    xpub: this.publicExtendedKey\n  }\n}\n\nHDKey.fromMasterSeed = function (seedBuffer, versions) {\n  var I = crypto.createHmac('sha512', MASTER_SECRET).update(seedBuffer).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hdkey = new HDKey(versions)\n  hdkey.chainCode = IR\n  hdkey.privateKey = IL\n\n  return hdkey\n}\n\nHDKey.fromExtendedKey = function (base58key, versions) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  versions = versions || BITCOIN_VERSIONS\n  var hdkey = new HDKey(versions)\n\n  var keyBuffer = cs.decode(base58key)\n\n  var version = keyBuffer.readUInt32BE(0)\n  assert(version === versions.private || version === versions.public, 'Version mismatch: does not match private or public')\n\n  hdkey.depth = keyBuffer.readUInt8(4)\n  hdkey.parentFingerprint = keyBuffer.readUInt32BE(5)\n  hdkey.index = keyBuffer.readUInt32BE(9)\n  hdkey.chainCode = keyBuffer.slice(13, 45)\n\n  var key = keyBuffer.slice(45)\n  if (key.readUInt8(0) === 0) { // private\n    assert(version === versions.private, 'Version mismatch: version does not match private')\n    hdkey.privateKey = key.slice(1) // cut off first 0x0 byte\n  } else {\n    assert(version === versions.public, 'Version mismatch: version does not match public')\n    hdkey.publicKey = key\n  }\n\n  return hdkey\n}\n\nHDKey.fromJSON = function (obj) {\n  return HDKey.fromExtendedKey(obj.xpriv)\n}\n\nfunction serialize (hdkey, version, key) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  var buffer = Buffer.allocUnsafe(LEN)\n\n  buffer.writeUInt32BE(version, 0)\n  buffer.writeUInt8(hdkey.depth, 4)\n\n  var fingerprint = hdkey.depth ? hdkey.parentFingerprint : 0x00000000\n  buffer.writeUInt32BE(fingerprint, 5)\n  buffer.writeUInt32BE(hdkey.index, 9)\n\n  hdkey.chainCode.copy(buffer, 13)\n  key.copy(buffer, 45)\n\n  return buffer\n}\n\nfunction hash160 (buf) {\n  var sha = crypto.createHash('sha256').update(buf).digest()\n  return crypto.createHash('ripemd160').update(sha).digest()\n}\n\nHDKey.HARDENED_OFFSET = HARDENED_OFFSET\nmodule.exports = HDKey\n"],"sourceRoot":"webpack:///"}